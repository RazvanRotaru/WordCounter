/*
 * This is sample code generated by rpcgen.
 * These are only templates and you can use them
 * as a guideline for developing your own functions.
 */

#include "tema.h"
#include <cstring>
#include <string>


void
myrpc_1(char *host, char* command, char* param)
{
	CLIENT *clnt;
	char * *result_1;
	message  send_message_1_arg;


#ifndef	DEBUG
	clnt = clnt_create (host, MYRPC, MYRPCVERS, "udp");
	if (clnt == NULL) {
		clnt_pcreateerror (host);
		exit (1);
	}
#endif	/* DEBUG */
	
	// add command to message 	
	send_message_1_arg.command = command;
	
	std::string nothing = "";
	send_message_1_arg.word = (char*)nothing.c_str();
	
	if (command == NULL)
		send_message_1_arg.command = (char*)nothing.c_str();

	result_1 = send_message_1(&send_message_1_arg, clnt);
	
	// check server ans
	if (result_1 == (char **) NULL) {
		clnt_perror (clnt, "call failed");
	}
	printf("%s\n", *result_1);

	if (std::strcmp(*result_1, "NO") != 0) {
		// add word/number to message
		send_message_1_arg.word = param;

		if (param == NULL)
			send_message_1_arg.word = (char*)nothing.c_str();

		result_1 = send_message_1(&send_message_1_arg, clnt);
		
		// check server ans
		if (result_1 == (char **) NULL) {
			clnt_perror (clnt, "call failed");
		}
		printf("%s\n", *result_1);
	} 

#ifndef	DEBUG
	clnt_destroy (clnt);
#endif	 /* DEBUG */
}


int
main (int argc, char *argv[])
{
	char *host;

	if (argc < 2) {
		printf ("usage: %s server_host\n", argv[0]);
		exit (1);
	}
	host = argv[1];
	
	myrpc_1 (host, argv[2], argv[3]);
exit (0);
}
